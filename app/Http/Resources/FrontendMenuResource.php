<?php

namespace App\Http\Resources;

use Illuminate\Http\Resources\Json\JsonResource;
use Modules\Catalog\Entities\ProductCategory;

/**
 * Class MenuResource
 * @package App\Http\Resources
 *  Template
[
"id"          => "string", // will be autogenerated if omitted
"text"        => "string", // node text
"icon"        => "string", // string for custom
"state"       => [
"opened"    => true , // is the node open
"disabled"  => false,  // is the node disabled
"selected"  => false,  // is the node selected
],
"children"    => [],  // array of strings or objects
"li_attr"     => [],  // attributes for the generated LI node
"a_attr"      => [],  // attributes for the generated A node
]
 */
class FrontendMenuResource extends JsonResource
{

    public function __construct($resource)
    {
        static::$wrap = null;
        $this->resource = $resource;
    }

    /**
     * Transform the resource into an array.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return array
     */
    public function toArray($request)
    {
        return [
            'id' => $this->id,
            'text' => $this->setName(),
            'icon' =>  $this->setIcon($this),
            'state'=>[
                'opened'=>0,
                'disabled'=>$this->isFolder($this),
                'selected'=>1,
            ],
            'children'=> FrontendMenuResource::collection($this->children),
            'li_attr'=>['class'=>(!$this->parent_id) ? 'root': ''],
            'button_controls'=>$this->makeButtonControls($this),
            'a_attr'=>[
                'active'=>$this->active,
            ]
        ];
    }

    protected function makeButtonControls($node)
    {
        if($this->isFolder($node)){
            return  [
                'data-create'=>route('root.frontend_menu.create',$this->id),
            ];
        }else{
            return [
                'data-active'=>route('root.frontend_menu.active',$this->id),
                'data-edit'=>route('root.frontend_menu.edit',$this->id),
                'data-delete'=>route('root.frontend_menu.destroy',$this->id),
            ];
        }
    }

    private function isFolder($node)
    {
        return !(bool)$node->page_id;
    }

    private function setIcon(FrontendMenuResource $node)
    {
        if($this->isFolder($node)):
            return $node->icon ?? 'fa fa-folder';
        else:
            return 'fas fa-file-alt';
        endif;
    }


    protected function setName()
    {
        if(isset($this->permission)){
            return $this->name ?? $this->permission->slug;
        }elseif($this->page && $this->page->pageable_type !== ProductCategory::class){
            return "<b>".$this->name."</b> <span style='margin-left: 15px'><small class='text-muted' style='font-size:12px'> (".__('cms.page').": ".$this->page->name. ") </small></span>" ;
        }else{
            return $this->name ?? $this->type;
        }
    }
}
